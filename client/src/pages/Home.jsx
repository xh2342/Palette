import { useState, useEffect } from "react";
import { FormField } from "../components";
import Card from "../components/Card";

const Home = () => {
  const [loading, setLoading] = useState(false);
  const [posts, setPosts] = useState([]);
  const [searchText, setSearchText] = useState("");
  const [searchResults, setSearchResults] = useState(null);

  const handleSearch = (e) => {
    e.preventDefault();

    if (searchText) {
      console.log(posts);
      const findPosts = posts.filter(
        (item) =>
          item.name.toLowerCase().includes(searchText.toLowerCase()) ||
          item.prompt.toLowerCase().includes(searchText.toLowerCase())
      );
      setSearchResults(findPosts);
    } else {
      alert("search field can not be empty");
    }
  };

  const handSearchTextChange = (e) => {
    setSearchText(e.target.value);
  };

  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);

      try {
        const response = await fetch("http://localhost:8080/api/post", {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
          },
        });

        if (!response.ok) {
          throw new Error(`Failed to fetch posts. Status: ${response.status}`);
        }

        const data = await response.json();

        setPosts(data.data);
      } catch (err) {
        console.error(err.message);
      } finally {
        setLoading(false);
      }
    };

    fetchPosts();
  }, []);

  return (
    <section className="flex flex-col gap-4 mx-4 w-auto ">
      <div className="flex flex-col mt-4 md:w-1/2 xl:w-1/3">
        <h1 className="text-3xl font-semibold">The Community Showcase</h1>
        <p className="text-sm mt-2">
          Browse through a collection of imaginative and visually stunning
          images generated by DALL-E AI
        </p>
      </div>

      <div className="md:w-1/2 xl:w-1/3">
        <form onSubmit={handleSearch} className="">
          <FormField
            labelName="Search Post"
            type="text"
            name="search-posts"
            placeholder="Search..."
            value={searchText}
            handleChange={handSearchTextChange}
          />
          <button type="submit">Search</button>
        </form>
      </div>

      {loading ? (
        <div>
          <h1>Loading...</h1>
        </div>
      ) : (
        <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
          {searchResults
            ? searchResults.map((post, index) => (
                <Card
                  key={index}
                  name={post.name}
                  prompt={post.prompt}
                  photo={post.photo}
                />
              ))
            : posts &&
              posts.map((post, index) => (
                <Card
                  key={index}
                  name={post.name}
                  prompt={post.prompt}
                  photo={post.photo}
                />
              ))}
        </div>
      )}
    </section>
  );
};

export default Home;
